{"version":3,"sources":["../../src/client/validators.es6"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;QAEG,eAAe,GAAf,eAAe;QAYf,iBAAiB,GAAjB,iBAAiB;QAcjB,cAAc,GAAd,cAAc;QAWd,iBAAiB,GAAjB,iBAAiB;;AArC1B,SAAS,eAAe,CAAE,OAAO,EAAE;AACzC,KAAI,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;;AAE9C,KAAI,CAAC,KAAK,EAAE;AACX,OAAK,GAAG,CAAC,CAAC;EACV;;AAED,QAAO,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,IAAI,EAAE,EAAE,IAAI,CAAC,CAAC;AACrD,QAAO,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,KAAK,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;AACpD,QAAO,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;CACpB;;AAEM,SAAS,iBAAiB,CAAE,OAAO,EAAE,IAAI,EAAE;AACjD,KAAI,OAAO,CAAC,IAAI,CAAC,IAAI,KAAK,SAAS,EAAE;AACpC,MAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CACxC,IAAI,CAAC,UAAU,SAAS,EAAE;AAC1B,YAAS,KAAK,OAAO,CAAC,IAAI,GAAG,SAAS,CAAA,AAAC,CAAC;AACxC,YAAS,KAAK,OAAO,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAA,AAAC,CAAC;AAC3C,OAAI,EAAE,CAAC;GACP,CAAC,SACI,CAAC,IAAI,CAAC,CAAC;EACd,MAAM;AACN,MAAI,EAAE,CAAC;EACP;CACD;;AAEM,SAAS,cAAc,CAAE,OAAO,EAAE,IAAI,EAAE;AAC9C,KAAI,IAAI,CAAC;;AAET,KAAI,GAAG,KAAK,IAAI,CAAC,KAAK,CAAC,MAAM,EAAC,EAAG,CAAC;AAClC,KAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;;AAEhC,QAAO,CAAC,IAAI,GAAG,IAAI,CAAC;;AAEpB,KAAI,EAAE,CAAC;CACP;;AAEM,SAAS,iBAAiB,CAAE,OAAO,EAAE,IAAI,EAAE;AACjD,KAAI,OAAO,CAAC;;AAEZ,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE;AAC1B,SAAO,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;EAChC;;AAED,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CACvD,MAAM,CAAC,UAAU,MAAM,EAAE;AACzB,SAAO,CAAC,CAAC,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;EACrF,CAAC,CACD,OAAO,CAAC,UAAU,MAAM,EAAE;AAC1B,SAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;EACvC,CAAC,CAAC;;AAEJ,KAAI,EAAE,CAAC;CACP","file":"validators.js","sourcesContent":["'use strict';\n\nexport function chatMessagesInc (options) {\n\tvar count = options.chat.get('countMessages');\n\n\tif (!count) {\n\t\tcount = 0;\n\t}\n\n\toptions.chat.fill('lastMessageAt', new Date(), true);\n\toptions.chat.fill('countMessages', count + 1, true);\n\toptions.chat.save();\n}\n\nexport function singlePrivateChat (options, next) {\n\tif (options.chat.type === 'private') {\n\t\tthis.model('chat').findEqual(options.chat)\n\t\t\t.then(function (equalChat) {\n\t\t\t\tequalChat && (options.chat = equalChat);\n\t\t\t\tequalChat && (options.chat.isEqual = true);\n\t\t\t\tnext();\n\t\t\t})\n\t\t\t.catch(next);\n\t} else {\n\t\tnext();\n\t}\n}\n\nexport function newChatOnGroup (options, next) {\n\tvar chat;\n\n\tchat = new (this.model('chat'))();\n\tchat.set(options.chat.toJSON());\n\n\toptions.chat = chat;\n\n\tnext();\n}\n\nexport function activeReadMessage (options, next) {\n\tvar sockets;\n\n\tif (!options.message.read) {\n\t\toptions.message.set('read', []);\n\t}\n\n\tthis.members.get(options.chat.get('members').map(String))\n\t\t.filter(function (socket) {\n\t\t\treturn !!socket.isActive || String(socket.user) === String(options.message.authorId);\n\t\t})\n\t\t.forEach(function (socket) {\n\t\t\toptions.message.read.push(socket.user);\n\t\t});\n\n\tnext();\n}"]}